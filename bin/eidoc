#!/usr/bin/env node
// -*- js -*-

var processor = require('../lib/processor');
var fork = processor.fork;
var gscope = require('../lib/loader').scope;
var path = require('path');
var fs = require('fs');

var existsSync = fs.existsSync || path.existsSync;

var scope = fork(gscope);
if(process.argv[3] === '-DEBUG') {
	processor.setDebug(true);
	process.argv[3] = undefined;
}

var argv = process.argv.slice(0, 3);

// These functions are compilation-specific.
scope.dirName = path.dirname;
scope.execPath = path.resolve(argv[1]);
scope.inputPath = path.normalize(argv[2]);
scope.normalizePath = path.normalize;
scope.getRelativePath = path.relative;
scope.getAbsolutePath = path.resolve;
scope.pathNoExt = function(s){return s.replace(/\.\w+$/, '')}

var workingScope = fork(scope);
workingScope.workingScope = workingScope;
var cwd = path.resolve(path.dirname(scope.inputPath));
do {
//	console.log(cwd);
	if(existsSync(path.resolve(cwd, '.common/default.ed'))){
		scope.cwd = path.resolve(cwd);
		workingScope.input(path.resolve(cwd, '.common/default.ed'));
		break;
	};
} while(cwd !== (cwd = path.resolve(cwd, '..')));
scope.inputFileStats = fs.statSync(argv[2]);
workingScope.input(argv[2]);